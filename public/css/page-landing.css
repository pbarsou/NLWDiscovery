#page-landing {
  background: linear-gradient(329.54deg, #29b6d1 0%, #00c7c7 100%); /* faz o gradiente 
  (degradê) de uma cor a outra, iniciando de 0% de uma a 100% da outra. */
  min-height: 100vh; /* estipula uma altura mínima (note que a altura mínima é a altura do nosso body, 
  já que uma página contém 100vh) */
  text-align: center; 

  display: flex; /* altera o display para flex / dessa forma podemos usar o 'margin: auto' */
}

#container {
  margin: auto; /* alinhamos nosso container no centro horizontalmente e verticalmente */
  /*width: 90%; /* definimos uma largura de até 90% da tela, para que não ocupe toda a largura da tela
  e em dispositivos mobile fique estranho */
  width: min(90%, 120rem); /* procura o mínimo entre 90% e 112rem (que equivale a 1120px de acordo
  a proporção que utilizamos) /* o que significa é que se 90% for menor que 120rem, ele aplica os
  90%, se não, aplica os 120rem de tela /* esse é o tamanho do nosso container*/
}

.location, main h1, .visit p { /* podemos usar a classe e indicar o elemento que queremos manipular, 
  como fizemos com o '.visit p', ou seja, estamos manipulando apenas o '<p>' presente na classe visit */

  height: 16vh; /* acaba por aplicar uma distância entre os elementos indicados de 16vh 
  (nosso body tem 100vh) */
}

#logo {
  animation-delay: 50ms; /* delay para a animação, para os itens aparecerem em tela progressivamente */
}

.location {
  animation-delay: 100ms; /* delay para a animação, para os itens aparecerem em tela progressivamente */
}

main h1 {
  animation-delay: 150ms; /* delay para a animação, para os itens aparecerem em tela progressivamente */
  font-size: clamp(4rem, 8vw, 8.4rem); /* o clamp nos ajuda para que o font-size mantenha uma proporção
  de no mínimo 4rem, no máx 8.4rem e sendo o ideal 8vw (viewport width, divide a tela em 100 pedacinhos)
  e pega 8 deles */
}

.visit p { /* poderia ser 'main p' */
  animation-delay: 200ms; /* delay para a animação, para os itens aparecerem em tela progressivamente */
}

.visit a { /* poderia ser 'main a' */
  width: 8rem;
  height: 8rem;
  background: #ffd666;
  border: none; /* sem borda */
  border-radius: 3rem; /* raio da borda */
  display: flex; /* disply flex para usarmos o 'margin: auto' */
  align-items: center; /* alinhamos o item verticalmente */
  justify-content: center; /* alinhamos o item horizontalmente */ /* agora ele já estará no centro de si 
  mesmo*/
  margin: auto; /* alinhamos o item ao centro da tela, tanto verticalmente quanto horizontalmente */

  transition: background 200ms; /* 'transition' sendo usado para a transição do background no ':hover' 
  ser durar 200ms, dando a sensação de suavidade */
  animation-delay: 250ms;
}

.visit a:hover { /* ':hover' é o estado em que o mouse está em cima, neste caso em cima do botão */
  background: #96feff; /* então, quando o mouse estiver em cima, o background é alterado para a
  cor indicada*/
}

/* desktop version */

@media (min-width: 760px) { /* as regras só serão executadas após o que está sendo passado como parâmetro 
for verdadeiro */ /* então, se a tela fo no mínimo de 760px */

  #container {
    padding: 5rem 2rem; /* aumentamos o padding da caixa (5rem em cima e baixo e 2rem nas laterias) para 
    que a imagem não seja cortada */
    background: url(../images/bg.svg) no-repeat 80% / clamp(30rem, 54vh, 56rem); /* image repeat 
    position / size /* a posição foi de 80% em relação a x e y /* o tamanho foi dado em clamp para se
    ajustar durante as telas */
  }

  header {
    display: flex;
    align-items: center; /* para um ficar ao lado do outro no meio certinho (da linha), verticalmente */
    justify-content: space-between; /* cria uma espaço entre eles */ /* após isso voltamos para a classe
    #container e ajustamos a limitação da box em tela */
  }

  .location, main h1, .visit p {
    height: initial; /* para voltar ao valor incial de antes mesmo de aplicarmos qualquer regra css */
    text-align: initial; /* volta os textos para posição inicial */
  }

  .location {
    text-align: right; /* alinha a direita */
    font-size: 2.4rem;
    line-height: 1.5; /* espaçamento das linhas */
  }

  main h1 {
    font-weight: bold;
    line-height: .88; /* distância entre as linhas */
    margin: clamp(10%, 9vh, 12%) 0 4rem; /* para mantermos uma proporção de margem (clamp para cima,
    0 para os lados e 4rem para baixo */
    width: min(300px, 80%); /* para limitarmos o tamanho */
  }

  .visit {
    display: flex;
    align-items: center;
    justify-content: space-between;
  }

  .visit p {
    font-size: 2.4rem;
    line-height: 1.2;
    width: clamp(20rem, 20vh, 30rem) /* basicamente (200px, 20vh, 300px) */
  }

  .visit a {
    margin: initial; /* para que consigamos jogar o botão pro canto, visto que o margin dele na versão
    mobile estava auto */
  }
  
}

